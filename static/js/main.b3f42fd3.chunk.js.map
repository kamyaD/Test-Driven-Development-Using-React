{"version":3,"sources":["components/Header.js","components/Button.js","components/Map.js","containers/mapChooser.js","containers/StoreLocator.js","containers/App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","width","alt","Component","Button","value","this","props","location","onClick","handleClick","Map","imagePath","imagename","mapChooser","locationName","StoreLocator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getMarkets","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","Axios","get","sent","setState","Markets","data","stop","state","currentMap","chooseMap","bind","assertThisInitialized","e","target","_this2","locationButtons","map","market","id","src_components_Button","key","Location","components_Header","src_components_Map","App","containers_StoreLocator","ReactDOM","render","src_containers_App","document","getElementById"],"mappings":"uUAaeA,mLARX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,8BAA8BC,MAAM,QAAQC,IAAI,sBAJ5CC,aCUNC,0LARP,OACIR,EAAAC,EAAAC,cAAA,UAAQO,MAAOC,KAAKC,MAAMC,SAAUC,QAASH,KAAKC,MAAMG,YAAaX,UAAU,mBAC1EO,KAAKC,MAAMC,iBAJPL,cCcNQ,0LAZP,IAAIC,EAMJ,OAJIA,EADAN,KAAKC,MAAMM,UACC,UAAYP,KAAKC,MAAMM,UAEvB,kBAERjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACnBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKY,EAAWV,IAAKI,KAAKC,MAAMC,mBAT/BL,cCSHW,MAZf,SAAoBC,GAMhB,OALOA,IACHA,EAAc,WAGFA,EAAc,yBC2CnBC,cAvCX,SAAAA,EAAYT,GAAO,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,KAWVgB,WAZmBL,OAAAM,EAAA,EAAAN,CAAAO,EAAA5B,EAAA6B,KAYN,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACYC,IAAMC,IAAI,2CADtB,OACLN,EADKE,EAAAK,KAETlB,EAAKmB,SAAS,CACVC,QAAST,EAASU,KAAKD,UAHlB,wBAAAP,EAAAS,SAAAZ,MAVTV,EAAKuB,MAAQ,CACTC,WAAY,WACZJ,QAAS,IAEbpB,EAAKyB,UAAYzB,EAAKyB,UAAUC,KAAfzB,OAAA0B,EAAA,EAAA1B,QAAA0B,EAAA,EAAA1B,CAAAD,KANFA,mFASfX,KAAKiB,+CASCsB,GACNvC,KAAK8B,SAAS,CAAEK,WAAY3B,EAAW+B,EAAEC,OAAOzC,0CAG3C,IAAA0C,EAAAzC,KACD0C,EAAkB1C,KAAKkC,MAAMH,QAAQY,IAAI,SAACC,EAAQC,GAAS,OAAQvD,EAAAC,EAAAC,cAACsD,EAAD,CAAQ1C,YAAaqC,EAAKL,UAAWW,IAAKF,EAAI3C,SAAU0C,EAAOI,aAEtI,OACI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyD,EAAD,MACA3D,EAAAC,EAAAC,cAAA,WACKkD,GAELpD,EAAAC,EAAAC,cAAC0D,EAAD,CAAK3C,UAAWP,KAAKkC,MAAMC,WAAYjC,SAAUF,KAAKC,MAAMC,mBAhCjDL,aCMZsD,0LARX,OACE7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAC4D,EAAD,cAJYvD,cCElBwD,IAASC,OAAOhE,EAAAC,EAAAC,cAAC+D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b3f42fd3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <img src=\"images/wired-brain-logo.png\" width=\"225px\" alt=\"Kit mikai\" />\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport './Button.css'\n\nclass Button extends Component {\n    render() {\n        return (\n            <button value={this.props.location} onClick={this.props.handleClick} className=\"location-button\">\n                {this.props.location}\n            </button>\n        );\n    }\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport './Map.css'\n\nclass Map extends Component {\n    render() {\n        let imagePath;\n        if (this.props.imagename) {\n            imagePath = 'images/' + this.props.imagename;\n        } else {\n            imagePath = 'images/none.png';\n        }\n        return (<div className=\"MapBox\">\n            <img src={imagePath} alt={this.props.location} /></div>);\n    }\n\n}\n\nexport default Map;\n\n","function mapChooser(locationName) {\n      if (!locationName) {\n        locationName= \"default\";\n    }\n\n    let imageName = locationName+ \".jpg\";\n    return (imageName);\n\n}\n\n\n\nexport default mapChooser;","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport Map from '../components/Map';\nimport mapChooser from '../containers/mapChooser';\nimport Axios from 'axios';\n\n\nclass StoreLocator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentMap: 'none.png',\n            Markets: []\n        }\n        this.chooseMap = this.chooseMap.bind(this);\n    }\n    componentDidMount() {\n        this.getMarkets();\n\n    }\n    getMarkets = async () => {\n        let response = await Axios.get('http://localhost:3000/data/Markets.json')\n        this.setState({\n            Markets: response.data.Markets\n        })\n    }\n    chooseMap(e) {\n        this.setState({ currentMap: mapChooser(e.target.value) });\n\n    }\n    render() {\n        let locationButtons = this.state.Markets.map((market, id) => { return (<Button handleClick={this.chooseMap} key={id} location={market.Location} />) }\n        )\n        return (\n            <div>\n                <Header />\n                <div>\n                    {locationButtons}\n                </div>\n                <Map imagename={this.state.currentMap} location={this.props.location} />\n            </div>\n\n        );\n\n    }\n}\n\nexport default StoreLocator;","import React, { Component } from 'react';\nimport StoreLocator from '../containers/StoreLocator';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <StoreLocator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}